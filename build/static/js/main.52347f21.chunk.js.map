{"version":3,"sources":["index.js"],"names":["Multiplexer","_ref","schema","_useState","useState","_useState2","Object","_Users_Ryan_Desktop_CleanCode_SBU_LabInACube_Lab_In_A_Cube_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","selectedOption","setSelectedOption","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","options","keys","map","key","value","label","react_select__WEBPACK_IMPORTED_MODULE_5__","onChange","x","Schema","addItemDialogs","name","itemDialog","prompt","window","config","items","alert","type","typeDialog","getItemSchemas","addLinesToConfigString","refreshPage","addDeltaDialog","d","deltaDialog","deltas","refreshGuiSchema","_ref6","_i","_Object$entries","entries","length","_ref5","_ref4","console","assert","isLeaf","LeafModifier","TextInput","_ref7","setValue","_material_ui_core_Input__WEBPACK_IMPORTED_MODULE_2___default","event","target","inputProps","aria-label","NumberInput","_ref8","_ref8$step","step","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_8___default","SelectInput","_ref9","_ref9$values","values","BooleanInput","_ref10","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_7___default","checked","Boolean","color","_ref11","undefined","input","set","disabled","path","state","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_1___default","variant","onClick","size","setInterval","tryRefreshInstance","refreshInstance","gameWindow","timerEvents","handleLoadConfig","code","loadConfigFromServer","JSON","stringify","App","_useState5","getDeltasGuiSchema","_useState6","setSchema","style","display","flexDirection","width","height","border","backgroundColor","flexGrow","overflowY","pointerEvents","saveConfigToServer","undoEditorChange","log","editorMode","_i3","_timerEvents","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.52347f21.chunk.js","sourcesContent":["import AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Fab from '@material-ui/core/Fab'\nimport IconButton from '@material-ui/core/IconButton'\nimport Input from '@material-ui/core/Input'\nimport NavigationIcon from '@material-ui/icons/Navigation'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Select from 'react-select'\nimport Split from 'react-split'\nimport Switch from '@material-ui/core/Switch'\nimport TextField from '@material-ui/core/TextField'\nimport {useState} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\n\n\nfunction Multiplexer({schema})\n{\n\tconst [selectedOption, setSelectedOption]=useState(null)\n\tif(!schema)\n\t\treturn <div></div>\n\tconst options                            =Object.keys(schema).map(key=>({value: key, label: key}))\n\treturn <div>\n\t\t<Select value={{label: selectedOption}}\n\t\t\t\tonChange={x=>setSelectedOption(x.value)}\n\t\t\t\toptions={options}\n\t\t/>\n\t\t<Schema schema={schema[selectedOption]}/>\n\t</div>\n}\n\nfunction StringInput({schema})\n{\n\treturn <div>{schema}</div>\n}\n\nfunction isLeaf(schema)\n{\n\tif(typeof schema!=='object')\n\t\treturn 'type'\n\tfor(const [index,value] of Object.entries(schema))\n\t{\n\t\tif(typeof value==='string')\n\t\t{\n\t\t\tconsole.assert('type' in schema)\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nfunction addItemDialogs()\n{\n\tfunction itemDialog()\n\t{\n\t\tconst value=prompt(\"Enter the new item name:\")\n\t\tif(!value)\n\t\t\treturn alert('Canceled adding item')\n\t\telse if(value in window.config.items)\n\t\t{\n\t\t\talert('Sorry, that names already taken! Try another one...')\n\t\t\treturn itemDialog()\n\t\t}\n\t\treturn value\n\t}\n\tfunction typeDialog()\n\t{\n\t\tconst value=prompt(\"Enter the new item type! Please choose from: \"+Object.keys(window.getItemSchemas()))\n\t\tif(!value)\n\t\t\treturn alert('Canceled adding item')\n\t\telse if(!(value in (window.getItemSchemas())))\n\t\t{\n\t\t\talert('Sorry, thats not a module type! Please choose from: '+Object.keys((window.getItemSchemas())))\n\t\t\treturn typeDialog()\n\t\t}\n\t\treturn value\n\t}\n\tconst name=itemDialog()\n\tif(!name)\n\t\treturn\n\tconst type=typeDialog()\n\tif(!type)\n\t\treturn\n\talert(\"Success! Added item. Please refresh the page to see changes.\")\n\twindow.addLinesToConfigString('items\t'+name+' '+type)\n\twindow.refreshPage()\n}\n\nfunction addDeltaDialog()\n{\n\tfunction deltaDialog()\n\t{\n\t\tconst value=prompt(\"Enter the new delta name:\")\n\t\tif(!value)\n\t\t\treturn alert('Canceled adding delta')\n\t\telse if(value in window.config.deltas)\n\t\t{\n\t\t\talert('Sorry, that names already taken! Try another one...')\n\t\t\treturn deltaDialog()\n\t\t}\n\t\treturn value\n\t}\n\tconst d=deltaDialog()\n\tif(!d)return\n\talert(\"Success! Added delta. You will now see it in the top dropdown menu.\")\n\twindow.addLinesToConfigString('deltas\t'+d)\n\twindow.refreshGuiSchema()\n}\n\nfunction Schema({schema})\n{\n\tif(!schema)\n\t\treturn <div></div>\n\tif(isLeaf(schema))\n\t{\n\t\treturn <LeafModifier schema={schema}/>\n\t}\n\telse\n\t{\n\t\treturn <Multiplexer schema={schema}/>\n\t}\n}\n\nfunction TextInput({value,setValue})\n{\n\treturn <Input\n        value={value}\n        onChange={event=>{setValue(event.target.value)}}\n        // className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}/>\n}\nfunction NumberInput({value,setValue,step=.1})\n{\n\treturn <TextField\n\ttype=\"number\"\n        value={value}\n\n     inputProps={{ /*min: \"0\", max: \"10\",*/ step: step }}\n        onChange={event=>{setValue(event.target.value)}}\n        // className={classes.input}\n        />\n}\n\nfunction SelectInput({value,setValue,values=[]})\n{\n\treturn <Select value={{label: value}}\n\t\t\t\t   onChange={x=>setValue(x.value)}\n\t\t\t\t   options={values.map(key=>({value: key, label: key}))}\n\t/>\n}\n\nfunction BooleanInput({value,setValue})\n{\n\treturn <Switch\n\t\tchecked={Boolean(value)}\n\t\tonChange={event=>setValue(event.target.checked)}\n\t\tcolor=\"primary\"\n\t\t/>\n}\n\nfunction LeafModifier({schema})\n{\n\tlet onClick=function()\n\t{\n\t\tconst value=prompt(\"Enter the new value:\")\n\t\tif(value==null)\n\t\t\treturn//Canceled\n\t\telse\n\t\t{\n\t\t\tschema.set(value)\n\t\t}\n\t}\n\n\tconst checked=schema.config!==undefined\n\t// alert(\"ASOIJD\")\n\tlet input=<TextInput value={schema.config} setValue={schema.set}/>\n\tif(schema.type==='string')\n\t{\n\t\tinput=input//Default: text input\n\t}\n\telse if(schema.type==='boolean')\n\t{\n\t\tinput=<BooleanInput value={schema.config} setValue={schema.set}/>\n\t}\n\telse if(schema.type==='number')\n\t{\n\t\tinput=<NumberInput value={schema.config} setValue={schema.set}/>\n\t}\n\telse if(schema.type==='select')\n\t{\n\t\tinput=<SelectInput value={schema.config} values={schema.values} setValue={schema.set}/>\n\t}\n\tconsole.assert(input!==undefined)\n\treturn <div>\n\t<Switch\n\t\tchecked={checked}\n\t\tdisabled={schema.path[0]==='initial'}\n\t\tonChange={event=>{const checked=event.target.checked;if(checked)/*alert(schema.state+'  '+schema.config)*/;schema.set(checked?schema.state:null)}}//if(!checked){schema.set(undefined)}else{console.assert(checked);setUsed(checked)}}}\n\t\tcolor=\"primary\"\n\t\t/>\n\t{checked?input : <div></div>}\n\t<Button\n\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\tsize=\"small\"\n\t\t\t\t   >{'State: '+schema.state+'\\tConfig: '+schema.config/*schema.path+''*/}</Button>\n\t\t\t\t   </div>\n}\n\nlet oldStuff=undefined\nsetInterval(window.tryRefreshInstance,100)\nfunction tryRefreshInstance()\n{\n\tif(window.refreshInstance)\n\t\twindow.refreshInstance()\n}\nwindow.refreshInstance=undefined\nfunction GetSimpleGui()\n{\n\tconst labels               =[]\n\tlet [instance, setInstance]=useState({})\n\twindow.refreshInstance=()=>setInstance(window.getGuiArchitectureInstance())\n\ttimerEvents[0]             =()=>\n\t{\n\t\tlet stuff=window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config])\n\t\tif(stuff!==oldStuff)\n\t\t{\n\t\t\tsetInstance(stuff)\n\t\t\toldStuff=stuff\n\t\t}\n\t}//This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\tfor(const [index, i] of Object.entries(instance))\n\t{\n\t\tif(i.path.includes('color'))\n\t\t{\n\t\t\tlet onClick=function()\n\t\t\t{\n\t\t\t\tconst value=prompt(\"Enter the new value for \"+(i.path.join(' '))+\n\t\t\t\t\t\t\t\t\t   '\\n\\n at delta '+(i.delta)+'\\n\\nCurrent Value: '+i.valueInConfig)\n\t\t\t\tif(value==null)\n\t\t\t\t\treturn//Canceled\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet configString=localStorage.getItem('config')\n\t\t\t\t\tconfigString+='\\n'+'deltas\t'+i.delta+'\t'+i.path.join('\t')+' '+value\n\t\t\t\t\twindow.gameWindow.setConfigDjsonInLocalStorage(configString)\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet color  =i.valueInConfig===undefined ? \"primary\" : \"secondary\"\n\t\t\tlabels.push(<Button key={index}\n\t\t\t\t\t\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor={color}>\n\t\t\t\t{'deltas '+i.delta+' '+i.path.join(' ')}\n\t\t\t</Button>)\n\t\t}\n\t}\n\treturn <table style={{flexGrow: 4, display: 'flex', flexDirection: 'column'}}>\n\t\t{labels}\n\t</table>\n}\n\nwindow.gameWindow=undefined//Will be set to the 'window' element of the 'game.html' iframe\nconst timerEvents=[()=>{}]//Calls each one of these on a timer\nfunction doTimerEvents()\n{\n\tif(window.gameWindow!==undefined)//We're not ready yet: the game iframe has to finish loading first\n\t{\n\t\tconsole.log(\"HO\")\n\t\twindow.gameWindow.editorMode=true\n\t\tfor(const event of timerEvents)\n\t\t\tevent()\n\t}\n}\nsetInterval(doTimerEvents, 100)\n\nfunction handleLoadConfig()\n{\n\tconst code=prompt('Please enter the 4 character code (case-sensitive) that you received when pressing \"Save Config\"')\n\tif(typeof code==='string' && code.length===4)\n\t{\n\t\twindow.loadConfigFromServer(code)\n\t}\n\telse if(!code)\n\t{\n\t\talert('Loading config from server cancelled.')\n\t}\n\telse\n\t{\n\t\talert('Please enter a four character code (you entered '+JSON.stringify(code)+', which has '+code.length+' characters)')\n\t\thandleLoadConfig()\n\t}\n}\n\nfunction App()\n{\n\tfunction setGameWindow(x)\n\t{\n\t\twindow.gameWindow=x.contentWindow\n\t}\n\tconst [schema,setSchema]=useState(window.getDeltasGuiSchema())\n\twindow.refreshGuiSchema=()=>setSchema(window.getDeltasGuiSchema())\n\tlet gameStyle={width: '100%', height: '100%', border: '0'}\n\t// noinspection HtmlUnknownTarget\n\treturn <div style={{display: 'flex', flexDirection: 'horizontal', width: '25%', height: '100%'}}>\n\t\t<div style={{border: 10, backgroundColor: 'rgba(255,255,255,.3)', flexGrow: 4, display: 'flex', flexDirection: 'column', overflowY: 'scroll', pointerEvents: 'auto'}}>\n\t\t\t<h1 style={{color: 'white'}}>Config</h1>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={()=>window.saveConfigToServer()}> Save Config </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={handleLoadConfig}> Load Config </Button>\n\t\t\t<Button style={{pointerEvents: 'auto'}} onClick={window.undoEditorChange}variant=\"contained\" size=\"small\" color=\"primary\"> Undo  </Button>\n\t\t\t{/*<Button variant=\"contained\" size=\"small\" color=\"primary\"> Redo </Button>*/}\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={addItemDialogs}> Add Item </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={addDeltaDialog}> Add Delta </Button>\n\t\t\t<Schema schema={schema}></Schema>\n\t\t</div>\n\t</div>\n}\ndocument.addEventListener(\"DOMContentLoaded\", function(event)\n{\n\tReactDOM.render(<App/>, document.getElementById('root'))\n\t// Your code to run since DOM is loaded and ready\n})\n"],"sourceRoot":""}