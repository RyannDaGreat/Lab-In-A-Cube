{"ast":null,"code":"import _slicedToArray from \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Split from 'react-split';\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nsetInterval(window.getGuiArchitectureInstance, .5);\n\nfunction LeafModifier({\n  path\n}) {}\n\nfunction GetSimpleGui() {\n  const labels = [];\n\n  let _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      instance = _useState2[0],\n      setInstance = _useState2[1];\n\n  timerEvents[0] = () => {\n    setInstance(gameWindow.getGuiArchitectureInstance());\n  };\n\n  for (const _ref of Object.entries(instance)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const index = _ref2[0];\n    const i = _ref2[1];\n    if (i.path.includes('color')) labels.push(React.createElement(Button, {\n      key: index,\n      variant: \"contained\",\n      onClick: function () {\n        const value = prompt(\"Enter the new value for \" + i.path.join(' ') + '\\n\\n at delta ' + i.delta + '\\n\\nCurrent Value: ' + i.valueInConfig);\n        if (value == null) return; //Canceled\n        else {\n            let configString = localStorage.getItem('config');\n            configString += '\\n' + 'deltas\t' + i.delta + '\t' + i.path.join('\t') + ' ' + value;\n            gameWindow.setConfigDjsonInLocalStorage(configString);\n          }\n      },\n      size: \"small\",\n      color: i.valueInConfig === undefined ? \"primary\" : \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, 'deltas ' + i.delta + ' ' + i.path.join(' ')));\n  }\n\n  return React.createElement(\"table\", {\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, labels);\n}\n\nwindow.editorMode = true;\nlet gameWindow = undefined; //Will be set to the 'window' element of the 'game.html' iframe\n\nconst timerEvents = [() => {}]; //Calls each one of these on a timer\n\nfunction doTimerEvents() {\n  if (gameWindow === undefined) return; //We're not ready yet: the game iframe has to finish loading first\n\n  for (const event of timerEvents) event();\n}\n\nsetInterval(doTimerEvents, 1000);\n\nfunction App() {\n  let setGameWindow = x => {\n    window.gameWindow = x.contentWindow;\n  };\n\n  let gameStyle = {\n    width: '100%',\n    height: '100%',\n    border: '0' // noinspection HtmlUnknownTarget\n\n  };\n  return React.createElement(Split, {\n    style: {\n      display: 'flex',\n      flexDirection: 'horizontal',\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      flexGrow: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"game.html\",\n    style: gameStyle,\n    ref: setGameWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      overflowY: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Config\"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \" Undo \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" Redo \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" Add Item \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" Add Delta \"), React.createElement(GetSimpleGui, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js"],"names":["AddIcon","Button","DeleteIcon","Fab","IconButton","NavigationIcon","PropTypes","React","ReactDOM","Split","useState","withStyles","setInterval","window","getGuiArchitectureInstance","LeafModifier","path","GetSimpleGui","labels","instance","setInstance","timerEvents","gameWindow","Object","entries","index","i","includes","push","value","prompt","join","delta","valueInConfig","configString","localStorage","getItem","setConfigDjsonInLocalStorage","undefined","flexGrow","display","flexDirection","editorMode","doTimerEvents","event","App","setGameWindow","x","contentWindow","gameStyle","width","height","border","overflowY","color","render","document","getElementById"],"mappings":"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","sourcesContent":["import AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Fab from '@material-ui/core/Fab'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigationIcon from '@material-ui/icons/Navigation'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Split from 'react-split'\nimport {useState} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\n\nsetInterval(window.getGuiArchitectureInstance, .5)\n\nfunction LeafModifier({path})\n{\n\n}\n\nfunction GetSimpleGui()\n{\n\tconst labels               =[]\n\tlet [instance, setInstance]=useState({})\n\ttimerEvents[0]             =()=>{setInstance(gameWindow.getGuiArchitectureInstance())}\n\n\tfor(const [index, i] of Object.entries(instance))\n\t{\n\t\tif(i.path.includes('color'))\n\t\t\tlabels.push(<Button key={index} variant=\"contained\" onClick={\n\t\t\t\tfunction()\n\t\t\t\t{\n\t\t\t\t\tconst value=prompt(\"Enter the new value for \"+(i.path.join(' '))+'\\n\\n at delta '+(i.delta)+'\\n\\nCurrent Value: '+i.valueInConfig)\n\t\t\t\t\tif(value==null)\n\t\t\t\t\t\treturn//Canceled\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlet configString=localStorage.getItem('config')\n\t\t\t\t\t\tconfigString+='\\n'+'deltas\t'+i.delta+'\t'+i.path.join('\t')+' '+value\n\t\t\t\t\t\tgameWindow.setConfigDjsonInLocalStorage(configString)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\tsize=\"small\" color={i.valueInConfig===undefined ? \"primary\" : \"secondary\"}>{'deltas '+i.delta+' '+i.path.join(' ')}</Button>)\n\t}\n\treturn <table style={{flexGrow: 4, display: 'flex', flexDirection: 'column'}}>\n\n\t\t{labels}\n\t</table>\n}\nwindow.editorMode=true\n\nlet gameWindow   =undefined//Will be set to the 'window' element of the 'game.html' iframe\nconst timerEvents=[()=>{}]//Calls each one of these on a timer\nfunction doTimerEvents()\n{\n\tif(gameWindow===undefined)\n\t\treturn//We're not ready yet: the game iframe has to finish loading first\n\tfor(const event of timerEvents)\n\t\tevent()\n}\nsetInterval(doTimerEvents, 1000)\n\nfunction App()\n{\n\tlet setGameWindow=(x)=>{window.gameWindow=x.contentWindow}\n\tlet gameStyle    ={width: '100%', height: '100%', border: '0'}\n\t// noinspection HtmlUnknownTarget\n\treturn <Split style={{display: 'flex', flexDirection: 'horizontal', width: '100%', height: '100%'}}>\n\t\t<div style={{flexGrow: 4}}>\n\t\t\t<iframe src=\"game.html\" style={gameStyle} ref={setGameWindow}/>\n\t\t</div>\n\t\t<div style={{flexGrow: 4, display: 'flex', flexDirection: 'column', overflowY: 'scroll'}}>\n\t\t\t<h1 style={{color: 'white'}}>Config</h1>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Undo </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Redo </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Add Item </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Add Delta </Button>\n\t\t\t<GetSimpleGui/>\n\t\t</div>\n\t</Split>\n}\n\nReactDOM.render(<App/>, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}