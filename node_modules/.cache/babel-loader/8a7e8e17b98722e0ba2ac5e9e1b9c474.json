{"ast":null,"code":"import _slicedToArray from \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/ThreeJS/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/ThreeJS/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Split from 'react-split';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nfunction getKeys(moduleTypeName) {// assert.isString(moduleTypeName)\n}\n\nfunction generate(config) {\n  // assert.isPureObject(config)\n  const items = config.items;\n  const deltas = config.deltas; // assert.isPureObject(items)\n  // assert.isPureObject(deltas)\n\n  for (const deltaId of deltas) {\n    // assert.isString(deltaId)\n    for (const _ref of Object.entries(items)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      const name = _ref2[0];\n      const type = _ref2[1];\n      // assert.isString(name)\n      // assert.isString(type)\n      const paths = window.modules[type]().gui;\n    }\n  }\n}\n\nfunction Leaf({}) {}\n\nfunction App() {\n  return React.createElement(Split, {\n    style: {\n      display: 'flex',\n      flexDirection: 'horizontal',\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      flexGrow: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"scene.html\",\n    style: {\n      width: '100%',\n      height: '100%',\n      border: '0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"App\",\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'vertical'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Config\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Small\"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"medium\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Medium\"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"large\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Large\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/ThreeJS/src/App.js"],"names":["React","Split","AddIcon","Button","DeleteIcon","Fab","IconButton","NavigationIcon","PropTypes","withStyles","getKeys","moduleTypeName","generate","config","items","deltas","deltaId","Object","entries","name","type","paths","window","modules","gui","Leaf","App","display","flexDirection","width","height","flexGrow","border","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAIA,SAASC,OAAT,CAAiBC,cAAjB,EACA,CACC;AAEA;;AAED,SAASC,QAAT,CAAkBC,MAAlB,EACA;AACC;AACA,QAAMC,KAAK,GAAED,MAAM,CAACC,KAApB;AACA,QAAMC,MAAM,GAACF,MAAM,CAACE,MAApB,CAHD,CAIC;AACA;;AACA,OAAI,MAAMC,OAAV,IAAqBD,MAArB,EACA;AACC;AACA,uBAA0BE,MAAM,CAACC,OAAP,CAAeJ,KAAf,CAA1B,EACA;AAAA;;AAAA,YADWK,IACX;AAAA,YADiBC,IACjB;AACC;AACA;AACA,YAAMC,KAAK,GAACC,MAAM,CAACC,OAAP,CAAeH,IAAf,IAAuBI,GAAnC;AAEA;AACD;AACD;;AAED,SAASC,IAAT,CAAc,EAAd,EACA,CAEC;;AAED,SAASC,GAAT,GACA;AACC,SAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC,MAAT;AAAgBC,MAAAA,aAAa,EAAC,YAA9B;AAA2CC,MAAAA,KAAK,EAAC,MAAjD;AAAwDC,MAAAA,MAAM,EAAC;AAA/D,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,GAAG,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAE;AAACF,MAAAA,KAAK,EAAE,MAAR;AAAeC,MAAAA,MAAM,EAAE,MAAvB;AAA8BE,MAAAA,MAAM,EAAC;AAArC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADK,EAIL;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAACD,MAAAA,QAAQ,EAAC,CAAV;AAAYJ,MAAAA,OAAO,EAAC,MAApB;AAA2BC,MAAAA,aAAa,EAAC;AAAzC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeC;AAAI,IAAA,KAAK,EAAE;AAACK,MAAAA,KAAK,EAAC;AAAP,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfD,EAgBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,OAAjC;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,KAAK,EAAC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAOI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,IAAI,EAAC,OAAjC;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPJ,CAhBD,CAJK,CAAP;AAiCA;;AAED,eAAeP,GAAf","sourcesContent":["import React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport Split from 'react-split'\n\nimport AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Fab from '@material-ui/core/Fab'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigationIcon from '@material-ui/icons/Navigation'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\n\n\n\nfunction getKeys(moduleTypeName)\n{\n\t// assert.isString(moduleTypeName)\n\n}\n\nfunction generate(config)\n{\n\t// assert.isPureObject(config)\n\tconst items =config.items\n\tconst deltas=config.deltas\n\t// assert.isPureObject(items)\n\t// assert.isPureObject(deltas)\n\tfor(const deltaId of deltas)\n\t{\n\t\t// assert.isString(deltaId)\n\t\tfor(const [name, type] of Object.entries(items))\n\t\t{\n\t\t\t// assert.isString(name)\n\t\t\t// assert.isString(type)\n\t\t\tconst paths=window.modules[type]().gui\n\n\t\t}\n\t}\n}\n\nfunction Leaf({})\n{\n\n}\n\nfunction App()\n{\n\treturn <Split style={{display:'flex',flexDirection:'horizontal',width:'100%',height:'100%'}}>\n\t\t\t<div style={{flexGrow:4}}>\n\t\t\t\t<iframe src=\"scene.html\" style={{width: '100%',height: '100%',border:'0'}}></iframe>\n\t\t\t</div>\n\t\t\t<div className=\"App\" style={{flexGrow:4,display:'flex',flexDirection:'vertical'}}>\n\t\t\t\t{/*<header className=\"App-header\">*/}\n\t\t\t\t\t{/*<img src={logo} className=\"App-logo\" alt=\"logo\"/>*/}\n\t\t\t\t\t{/*<p>*/}\n\t\t\t\t\t\t{/*Edit <code>src/App.js</code> and save to reload.*/}\n\t\t\t\t\t{/*</p>*/}\n\t\t\t\t\t{/*<a*/}\n\t\t\t\t\t\t{/*className=\"App-link\"*/}\n\t\t\t\t\t\t{/*href=\"https://reactjs.org\"*/}\n\t\t\t\t\t\t{/*target=\"_blank\"*/}\n\t\t\t\t\t\t{/*rel=\"noopener noreferrer\"*/}\n\t\t\t\t\t{/*>*/}\n\t\t\t\t\t\t{/*Learn React*/}\n\t\t\t\t\t{/*</a>*/}\n\t\t\t\t{/*</header>*/}\n\t\t\t\t<h1 style={{color:'white'}}>Config</h1>\n\t\t\t\t<div>\n        <Button variant=\"contained\" size=\"small\" color=\"primary\">\n          Small\n        </Button>\n        <Button variant=\"contained\" size=\"medium\" color=\"primary\">\n          Medium\n        </Button>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\">\n          Large\n        </Button>\n      </div>\n\t\t\t</div>\n\t\t</Split>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}