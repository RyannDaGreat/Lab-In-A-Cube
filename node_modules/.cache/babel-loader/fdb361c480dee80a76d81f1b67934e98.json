{"ast":null,"code":"import _slicedToArray from \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Split from 'react-split';\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from 'react-select';\n\nfunction LeafModifier({\n  path\n}) {}\n\nlet oldStuff = undefined;\n\nfunction GetSimpleGui() {\n  const labels = [];\n\n  let _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      instance = _useState2[0],\n      setInstance = _useState2[1];\n\n  timerEvents[0] = () => {\n    let stuff = window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config]);\n\n    if (stuff !== oldStuff) {\n      setInstance(stuff);\n      oldStuff = stuff;\n    }\n  }; //This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\n  for (const _ref of Object.entries(instance)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const index = _ref2[0];\n    const i = _ref2[1];\n\n    if (i.path.includes('color')) {\n      let onClick = function () {\n        const value = prompt(\"Enter the new value for \" + i.path.join(' ') + '\\n\\n at delta ' + i.delta + '\\n\\nCurrent Value: ' + i.valueInConfig);\n        if (value == null) return; //Canceled\n        else {\n            let configString = localStorage.getItem('config');\n            configString += '\\n' + 'deltas\t' + i.delta + '\t' + i.path.join('\t') + ' ' + value;\n            window.gameWindow.setConfigDjsonInLocalStorage(configString);\n          }\n      };\n\n      let color = i.valueInConfig === undefined ? \"primary\" : \"secondary\";\n      labels.push(React.createElement(Button, {\n        key: index,\n        variant: \"contained\",\n        onClick: onClick,\n        size: \"small\",\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, 'deltas ' + i.delta + ' ' + i.path.join(' ')));\n    }\n  }\n\n  return React.createElement(\"table\", {\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, labels);\n}\n\nwindow.gameWindow = undefined; //Will be set to the 'window' element of the 'game.html' iframe\n\nconst timerEvents = [() => {}]; //Calls each one of these on a timer\n\nfunction doTimerEvents() {\n  if (window.gameWindow !== undefined) //We're not ready yet: the game iframe has to finish loading first\n    {\n      console.log(\"HO\");\n      window.gameWindow.editorMode = true;\n\n      for (const event of timerEvents) event();\n    }\n}\n\nsetInterval(doTimerEvents, 100);\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\n\nfunction App() {\n  function setGameWindow(x) {\n    // let w            =x.contentWindow\n    window.gameWindow = x.contentWindow;\n  }\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedOption = _useState4[0],\n        setselectedOption = _useState4[1];\n\n  const handleChange = selectedOption => {\n    alert(JSON.stringify(selectedOption));\n    setselectedOption(selectedOption.value); // console.log(`Option selected:`, selectedOption);\n  };\n\n  let gameStyle = {\n    width: '100%',\n    height: '100%',\n    border: '0' // noinspection HtmlUnknownTarget\n\n  };\n  return React.createElement(Split, {\n    style: {\n      display: 'flex',\n      flexDirection: 'horizontal',\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      border: 10,\n      backgroundColor: 'rgba(255,255,255,.1)',\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      overflowY: 'scroll',\n      pointerEvents: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Config\"), React.createElement(Button, {\n    style: {\n      pointerEvents: 'auto'\n    },\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \" Undo \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \" Redo \"), React.createElement(Select, {\n    value: selectedOption,\n    onChange: handleChange,\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \" Add Item \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \" Add Delta \"), React.createElement(GetSimpleGui, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  ReactDOM.render(React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  })), document.getElementById('root')); // Your code to run since DOM is loaded and ready\n});","map":{"version":3,"sources":["/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js"],"names":["AddIcon","Button","DeleteIcon","Fab","IconButton","NavigationIcon","PropTypes","React","ReactDOM","Split","useState","withStyles","Select","LeafModifier","path","oldStuff","undefined","GetSimpleGui","labels","instance","setInstance","timerEvents","stuff","window","gameWindow","getGuiArchitectureInstance","apply","config","Object","entries","index","i","includes","onClick","value","prompt","join","delta","valueInConfig","configString","localStorage","getItem","setConfigDjsonInLocalStorage","color","push","flexGrow","display","flexDirection","doTimerEvents","console","log","editorMode","event","setInterval","options","label","App","setGameWindow","x","contentWindow","selectedOption","setselectedOption","handleChange","alert","JSON","stringify","gameStyle","width","height","border","backgroundColor","overflowY","pointerEvents","document","addEventListener","render","getElementById"],"mappings":"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","sourcesContent":["import AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Fab from '@material-ui/core/Fab'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigationIcon from '@material-ui/icons/Navigation'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Split from 'react-split'\nimport {useState} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\nimport Select from 'react-select';\n\n\nfunction LeafModifier({path})\n{\n\n}\n\nlet oldStuff=undefined\nfunction GetSimpleGui()\n{\n\tconst labels               =[]\n\tlet [instance, setInstance]=useState({})\n\ttimerEvents[0]             =()=>\n\t{\n\t\tlet stuff=window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config])\n\t\tif(stuff!==oldStuff)\n\t\t{\n\t\t\tsetInstance(stuff)\n\t\t\toldStuff=stuff\n\t\t}\n\t}//This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\tfor(const [index, i] of Object.entries(instance))\n\t{\n\t\tif(i.path.includes('color'))\n\t\t{\n\t\t\tlet onClick=function()\n\t\t\t{\n\t\t\t\tconst value=prompt(\"Enter the new value for \"+(i.path.join(' '))+\n\t\t\t\t\t\t\t\t\t   '\\n\\n at delta '+(i.delta)+'\\n\\nCurrent Value: '+i.valueInConfig)\n\t\t\t\tif(value==null)\n\t\t\t\t\treturn//Canceled\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet configString=localStorage.getItem('config')\n\t\t\t\t\tconfigString+='\\n'+'deltas\t'+i.delta+'\t'+i.path.join('\t')+' '+value\n\t\t\t\t\twindow.gameWindow.setConfigDjsonInLocalStorage(configString)\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet color  =i.valueInConfig===undefined ? \"primary\" : \"secondary\"\n\t\t\tlabels.push(<Button key={index}\n\t\t\t\t\t\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor={color}>\n\t\t\t\t{'deltas '+i.delta+' '+i.path.join(' ')}\n\t\t\t</Button>)\n\t\t}\n\t}\n\treturn <table style={{flexGrow: 4, display: 'flex', flexDirection: 'column'}}>\n\t\t{labels}\n\t</table>\n}\n\nwindow.gameWindow   =undefined//Will be set to the 'window' element of the 'game.html' iframe\nconst timerEvents=[()=>{}]//Calls each one of these on a timer\nfunction doTimerEvents()\n{\n\tif(window.gameWindow!==undefined)//We're not ready yet: the game iframe has to finish loading first\n\t{\n\t\tconsole.log(\"HO\")\n\t\twindow.gameWindow.editorMode=true\n\t\tfor(const event of timerEvents)\n\t\t\tevent()\n\t}\n}\nsetInterval(doTimerEvents, 100)\n\nconst options = [\n\t{ value: 'chocolate', label: 'Chocolate' },\n\t{ value: 'strawberry', label: 'Strawberry' },\n\t{ value: 'vanilla', label: 'Vanilla' }\n];\n\n\nfunction App()\n{\n\tfunction setGameWindow(x)\n\t{\n\t\t// let w            =x.contentWindow\n\t\twindow.gameWindow=x.contentWindow\n\t}\n\tconst [selectedOption,setselectedOption]=useState(null)\n\n\tconst handleChange = (selectedOption) => {\n\t\talert(JSON.stringify(selectedOption))\n\t\tsetselectedOption( selectedOption .value);\n\t\t// console.log(`Option selected:`, selectedOption);\n\t}\n\n\tlet gameStyle={width: '100%', height: '100%', border: '0'}\n\t// noinspection HtmlUnknownTarget\n\treturn <Split style={{display: 'flex', flexDirection: 'horizontal', width: '100%', height: '100%'}}>\n\t\t<div style={{border:10,backgroundColor:'rgba(255,255,255,.1)', flexGrow: 4, display: 'flex', flexDirection: 'column', overflowY: 'scroll',pointerEvents:'auto'}}>\n\t\t\t<h1 style={{color: 'white'}}>Config</h1>\n\t\t\t<Button style={{pointerEvents:'auto'}}variant=\"contained\" size=\"small\" color=\"primary\"> Undo </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Redo </Button>\n\t\t<Select\n\t\t\tvalue={selectedOption}\n\t\t\tonChange={handleChange}\n\t\t\toptions={options}\n\t\t/>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Add Item </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Add Delta </Button>\n\t\t\t<GetSimpleGui/>\n\t\t</div>\n\t\t<div></div>\n\t\t<div></div>\n\t\t<div></div>\n\t</Split>\n}\ndocument.addEventListener(\"DOMContentLoaded\", function(event)\n{\n\tReactDOM.render(<div><App/></div>, document.getElementById('root'))\n\t// Your code to run since DOM is loaded and ready\n})\n"]},"metadata":{},"sourceType":"module"}