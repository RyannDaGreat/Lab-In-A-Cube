{"ast":null,"code":"import _slicedToArray from \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Split from 'react-split';\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nfunction LeafModifier({\n  path\n}) {}\n\nlet oldStuff = undefined;\n\nfunction GetSimpleGui() {\n  const labels = [];\n\n  let _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      instance = _useState2[0],\n      setInstance = _useState2[1];\n\n  timerEvents[0] = () => {\n    let stuff = window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config]);\n\n    if (stuff !== oldStuff) {\n      setInstance(stuff);\n      oldStuff = stuff;\n    }\n  }; //This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\n  for (const _ref of Object.entries(instance)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const index = _ref2[0];\n    const i = _ref2[1];\n\n    if (i.path.includes('color')) {\n      let onClick = function () {\n        const value = prompt(\"Enter the new value for \" + i.path.join(' ') + '\\n\\n at delta ' + i.delta + '\\n\\nCurrent Value: ' + i.valueInConfig);\n        if (value == null) return; //Canceled\n        else {\n            let configString = localStorage.getItem('config');\n            configString += '\\n' + 'deltas\t' + i.delta + '\t' + i.path.join('\t') + ' ' + value;\n            window.gameWindow.setConfigDjsonInLocalStorage(configString);\n          }\n      };\n\n      let color = i.valueInConfig === undefined ? \"primary\" : \"secondary\";\n      labels.push(React.createElement(Button, {\n        key: index,\n        variant: \"contained\",\n        onClick: onClick,\n        size: \"small\",\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, 'deltas ' + i.delta + ' ' + i.path.join(' ')));\n    }\n  }\n\n  return React.createElement(\"table\", {\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, labels);\n}\n\nwindow.gameWindow = undefined; //Will be set to the 'window' element of the 'game.html' iframe\n\nconst timerEvents = [() => {}]; //Calls each one of these on a timer\n\nfunction doTimerEvents() {\n  if (window.gameWindow !== undefined) //We're not ready yet: the game iframe has to finish loading first\n    {\n      console.log(\"HO\");\n      window.gameWindow.editorMode = true;\n\n      for (const event of timerEvents) event();\n    }\n}\n\nsetInterval(doTimerEvents, 100);\n\nfunction App() {\n  function setGameWindow(x) {\n    // let w            =x.contentWindow\n    window.gameWindow = x.contentWindow;\n  }\n\n  let gameStyle = {\n    width: '100%',\n    height: '100%',\n    border: '0' // noinspection HtmlUnknownTarget\n\n  };\n  return React.createElement(Split, {\n    style: {\n      display: 'flex',\n      flexDirection: 'horizontal',\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      flexGrow: 4\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"iframe\", {\n    src: \"game.html\",\n    style: gameStyle,\n    ref: setGameWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      overflowY: 'scroll'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Config\"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" Undo \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \" Redo \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" Add Item \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \" Add Delta \"), React.createElement(GetSimpleGui, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  ReactDOM.render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), document.getElementById('root')); // Your code to run since DOM is loaded and ready\n});","map":{"version":3,"sources":["/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js"],"names":["AddIcon","Button","DeleteIcon","Fab","IconButton","NavigationIcon","PropTypes","React","ReactDOM","Split","useState","withStyles","LeafModifier","path","oldStuff","undefined","GetSimpleGui","labels","instance","setInstance","timerEvents","stuff","window","gameWindow","getGuiArchitectureInstance","apply","config","Object","entries","index","i","includes","onClick","value","prompt","join","delta","valueInConfig","configString","localStorage","getItem","setConfigDjsonInLocalStorage","color","push","flexGrow","display","flexDirection","doTimerEvents","console","log","editorMode","event","setInterval","App","setGameWindow","x","contentWindow","gameStyle","width","height","border","overflowY","document","addEventListener","render","getElementById"],"mappings":"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","sourcesContent":["import AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Fab from '@material-ui/core/Fab'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigationIcon from '@material-ui/icons/Navigation'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Split from 'react-split'\nimport {useState} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\n\nfunction LeafModifier({path})\n{\n\n}\n\nlet oldStuff=undefined\nfunction GetSimpleGui()\n{\n\tconst labels               =[]\n\tlet [instance, setInstance]=useState({})\n\ttimerEvents[0]             =()=>\n\t{\n\t\tlet stuff=window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config])\n\t\tif(stuff!==oldStuff)\n\t\t{\n\t\t\tsetInstance(stuff)\n\t\t\toldStuff=stuff\n\t\t}\n\t}//This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\tfor(const [index, i] of Object.entries(instance))\n\t{\n\t\tif(i.path.includes('color'))\n\t\t{\n\t\t\tlet onClick=function()\n\t\t\t{\n\t\t\t\tconst value=prompt(\"Enter the new value for \"+(i.path.join(' '))+\n\t\t\t\t\t\t\t\t\t   '\\n\\n at delta '+(i.delta)+'\\n\\nCurrent Value: '+i.valueInConfig)\n\t\t\t\tif(value==null)\n\t\t\t\t\treturn//Canceled\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet configString=localStorage.getItem('config')\n\t\t\t\t\tconfigString+='\\n'+'deltas\t'+i.delta+'\t'+i.path.join('\t')+' '+value\n\t\t\t\t\twindow.gameWindow.setConfigDjsonInLocalStorage(configString)\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet color  =i.valueInConfig===undefined ? \"primary\" : \"secondary\"\n\t\t\tlabels.push(<Button key={index}\n\t\t\t\t\t\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor={color}>\n\t\t\t\t{'deltas '+i.delta+' '+i.path.join(' ')}\n\t\t\t</Button>)\n\t\t}\n\t}\n\treturn <table style={{flexGrow: 4, display: 'flex', flexDirection: 'column'}}>\n\t\t{labels}\n\t</table>\n}\n\nwindow.gameWindow   =undefined//Will be set to the 'window' element of the 'game.html' iframe\nconst timerEvents=[()=>{}]//Calls each one of these on a timer\nfunction doTimerEvents()\n{\n\tif(window.gameWindow!==undefined)//We're not ready yet: the game iframe has to finish loading first\n\t{\n\t\tconsole.log(\"HO\")\n\t\twindow.gameWindow.editorMode=true\n\t\tfor(const event of timerEvents)\n\t\t\tevent()\n\t}\n}\nsetInterval(doTimerEvents, 100)\n\nfunction App()\n{\n\tfunction setGameWindow(x)\n\t{\n\t\t// let w            =x.contentWindow\n\t\twindow.gameWindow=x.contentWindow\n\t}\n\tlet gameStyle={width: '100%', height: '100%', border: '0'}\n\t// noinspection HtmlUnknownTarget\n\treturn <Split style={{display: 'flex', flexDirection: 'horizontal', width: '100%', height: '100%'}}>\n\t\t<div style={{flexGrow: 4}}>\n\t\t\t<iframe src=\"game.html\" style={gameStyle} ref={setGameWindow}/>\n\t\t</div>\n\t\t<div style={{flexGrow: 4, display: 'flex', flexDirection: 'column', overflowY: 'scroll'}}>\n\t\t\t<h1 style={{color: 'white'}}>Config</h1>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Undo </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Redo </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Add Item </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Add Delta </Button>\n\t\t\t<GetSimpleGui/>\n\t\t</div>\n\t</Split>\n}\ndocument.addEventListener(\"DOMContentLoaded\", function(event)\n{\n\tReactDOM.render(<App/>, document.getElementById('root'))\n\t// Your code to run since DOM is loaded and ready\n})\n"]},"metadata":{},"sourceType":"module"}