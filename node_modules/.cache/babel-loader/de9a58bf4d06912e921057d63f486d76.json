{"ast":null,"code":"import _slicedToArray from \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Split from 'react-split';\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from 'react-select';\n\nfunction Multiplexer({\n  schema\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOption = _useState2[0],\n        setSelectedOption = _useState2[1];\n\n  if (!schema) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  });\n  const options = Object.keys(schema).map(key => ({\n    value: key,\n    label: key\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: {\n      label: selectedOption\n    },\n    onChange: x => setSelectedOption(x.value),\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Schema, {\n    schema: schema[selectedOption],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\n\nfunction StringInput({\n  schema\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, schema);\n}\n\nfunction isLeaf(schema) {\n  if (typeof schema !== 'object') return 'type' in schema; // for(const [index,value] of Object.entries(schema))\n  // {\n  // \tif(typeof value==='string')\n  // \t{\n  // \t\tconsole.assert('type' in schema)\n  // \t\treturn true\n  // \t}\n  // }\n\n  return false;\n}\n\nfunction Schema({\n  schema\n}) {\n  if (isLeaf(schema)) {\n    return React.createElement(LeafModifier, {\n      schema: schema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Multiplexer, {\n      schema: schema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  }\n}\n\nfunction LeafModifier({\n  schema\n}) {\n  let onClick = function () {\n    const value = prompt(\"Enter the new value:\");\n    if (value == null) return; //Canceled\n    else {\n        schema.set(value);\n      }\n  };\n\n  return React.createElement(Button, {\n    variant: \"contained\",\n    onClick: onClick,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, schema.path + '');\n}\n\nlet oldStuff = undefined;\n\nfunction GetSimpleGui() {\n  const labels = [];\n\n  let _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      instance = _useState4[0],\n      setInstance = _useState4[1];\n\n  timerEvents[0] = () => {\n    let stuff = window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config]);\n\n    if (stuff !== oldStuff) {\n      setInstance(stuff);\n      oldStuff = stuff;\n    }\n  }; //This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\n  for (const _ref of Object.entries(instance)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const index = _ref2[0];\n    const i = _ref2[1];\n\n    if (i.path.includes('color')) {\n      let onClick = function () {\n        const value = prompt(\"Enter the new value for \" + i.path.join(' ') + '\\n\\n at delta ' + i.delta + '\\n\\nCurrent Value: ' + i.valueInConfig);\n        if (value == null) return; //Canceled\n        else {\n            let configString = localStorage.getItem('config');\n            configString += '\\n' + 'deltas\t' + i.delta + '\t' + i.path.join('\t') + ' ' + value;\n            window.gameWindow.setConfigDjsonInLocalStorage(configString);\n          }\n      };\n\n      let color = i.valueInConfig === undefined ? \"primary\" : \"secondary\";\n      labels.push(React.createElement(Button, {\n        key: index,\n        variant: \"contained\",\n        onClick: onClick,\n        size: \"small\",\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, 'deltas ' + i.delta + ' ' + i.path.join(' ')));\n    }\n  }\n\n  return React.createElement(\"table\", {\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, labels);\n}\n\nwindow.gameWindow = undefined; //Will be set to the 'window' element of the 'game.html' iframe\n\nconst timerEvents = [() => {}]; //Calls each one of these on a timer\n\nfunction doTimerEvents() {\n  if (window.gameWindow !== undefined) //We're not ready yet: the game iframe has to finish loading first\n    {\n      console.log(\"HO\");\n      window.gameWindow.editorMode = true;\n\n      for (const event of timerEvents) event();\n    }\n}\n\nsetInterval(doTimerEvents, 100);\n\nfunction App() {\n  function setGameWindow(x) {\n    // let w            =x.contentWindow\n    window.gameWindow = x.contentWindow;\n  }\n\n  let gameStyle = {\n    width: '100%',\n    height: '100%',\n    border: '0' // noinspection HtmlUnknownTarget\n\n  };\n  return React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'horizontal',\n      width: '25%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      border: 10,\n      backgroundColor: 'rgba(255,255,255,.1)',\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      overflowY: 'scroll',\n      pointerEvents: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Config\"), React.createElement(Button, {\n    style: {\n      pointerEvents: 'auto'\n    },\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \" Undo \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \" Redo \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \" Add Item \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \" Add Delta \"), React.createElement(LeafModifier, {\n    schema: window.getDeltasGuiSchema(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(GetSimpleGui, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  ReactDOM.render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), document.getElementById('root')); // Your code to run since DOM is loaded and ready\n});","map":{"version":3,"sources":["/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js"],"names":["AddIcon","Button","DeleteIcon","Fab","IconButton","NavigationIcon","PropTypes","React","ReactDOM","Split","useState","withStyles","Select","Multiplexer","schema","selectedOption","setSelectedOption","options","Object","keys","map","key","value","label","x","StringInput","isLeaf","Schema","LeafModifier","onClick","prompt","set","path","oldStuff","undefined","GetSimpleGui","labels","instance","setInstance","timerEvents","stuff","window","gameWindow","getGuiArchitectureInstance","apply","config","entries","index","i","includes","join","delta","valueInConfig","configString","localStorage","getItem","setConfigDjsonInLocalStorage","color","push","flexGrow","display","flexDirection","doTimerEvents","console","log","editorMode","event","setInterval","App","setGameWindow","contentWindow","gameStyle","width","height","border","backgroundColor","overflowY","pointerEvents","getDeltasGuiSchema","document","addEventListener","render","getElementById"],"mappings":"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","sourcesContent":["import AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Fab from '@material-ui/core/Fab'\nimport IconButton from '@material-ui/core/IconButton'\nimport NavigationIcon from '@material-ui/icons/Navigation'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Split from 'react-split'\nimport {useState} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\nimport Select from 'react-select'\n\nfunction Multiplexer({schema})\n{\n\tconst [selectedOption, setSelectedOption]=useState(null)\n\tif(!schema)\n\t\treturn <div></div>\n\tconst options                            =Object.keys(schema).map(key=>({value: key, label: key}))\n\n\treturn <div>\n\t\t<Select value={{label: selectedOption}}\n\t\t\t\tonChange={x=>setSelectedOption(x.value)}\n\t\t\t\toptions={options}\n\t\t/>\n\t\t<Schema schema={schema[selectedOption]}/>\n\t</div>\n}\n\nfunction StringInput({schema})\n{\n\treturn <div>{schema}</div>\n}\n\nfunction isLeaf(schema)\n{\n\tif(typeof schema!=='object')\n\t\treturn 'type' in schema\n\t// for(const [index,value] of Object.entries(schema))\n\t// {\n\t// \tif(typeof value==='string')\n\t// \t{\n\t// \t\tconsole.assert('type' in schema)\n\t// \t\treturn true\n\t// \t}\n\t// }\n\treturn false\n}\n\nfunction Schema({schema})\n{\n\tif(isLeaf(schema))\n\t{\n\t\treturn <LeafModifier schema={schema}/>\n\t}\n\telse\n\t{\n\t\treturn <Multiplexer schema={schema}/>\n\t}\n}\n\nfunction LeafModifier({schema})\n{\n\tlet onClick=function()\n\t{\n\t\tconst value=prompt(\"Enter the new value:\")\n\t\tif(value==null)\n\t\t\treturn//Canceled\n\t\telse\n\t\t{\n\t\t\tschema.set(value)\n\t\t}\n\t}\n\treturn <Button\n\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\tsize=\"small\"\n\t\t\t\t   >{schema.path+''}</Button>\n}\n\nlet oldStuff=undefined\nfunction GetSimpleGui()\n{\n\tconst labels               =[]\n\tlet [instance, setInstance]=useState({})\n\ttimerEvents[0]             =()=>\n\t{\n\t\tlet stuff=window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config])\n\t\tif(stuff!==oldStuff)\n\t\t{\n\t\t\tsetInstance(stuff)\n\t\t\toldStuff=stuff\n\t\t}\n\t}//This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\tfor(const [index, i] of Object.entries(instance))\n\t{\n\t\tif(i.path.includes('color'))\n\t\t{\n\t\t\tlet onClick=function()\n\t\t\t{\n\t\t\t\tconst value=prompt(\"Enter the new value for \"+(i.path.join(' '))+\n\t\t\t\t\t\t\t\t\t   '\\n\\n at delta '+(i.delta)+'\\n\\nCurrent Value: '+i.valueInConfig)\n\t\t\t\tif(value==null)\n\t\t\t\t\treturn//Canceled\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet configString=localStorage.getItem('config')\n\t\t\t\t\tconfigString+='\\n'+'deltas\t'+i.delta+'\t'+i.path.join('\t')+' '+value\n\t\t\t\t\twindow.gameWindow.setConfigDjsonInLocalStorage(configString)\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet color  =i.valueInConfig===undefined ? \"primary\" : \"secondary\"\n\t\t\tlabels.push(<Button key={index}\n\t\t\t\t\t\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor={color}>\n\t\t\t\t{'deltas '+i.delta+' '+i.path.join(' ')}\n\t\t\t</Button>)\n\t\t}\n\t}\n\treturn <table style={{flexGrow: 4, display: 'flex', flexDirection: 'column'}}>\n\t\t{labels}\n\t</table>\n}\n\nwindow.gameWindow=undefined//Will be set to the 'window' element of the 'game.html' iframe\nconst timerEvents=[()=>{}]//Calls each one of these on a timer\nfunction doTimerEvents()\n{\n\tif(window.gameWindow!==undefined)//We're not ready yet: the game iframe has to finish loading first\n\t{\n\t\tconsole.log(\"HO\")\n\t\twindow.gameWindow.editorMode=true\n\t\tfor(const event of timerEvents)\n\t\t\tevent()\n\t}\n}\nsetInterval(doTimerEvents, 100)\n\nfunction App()\n{\n\tfunction setGameWindow(x)\n\t{\n\t\t// let w            =x.contentWindow\n\t\twindow.gameWindow=x.contentWindow\n\t}\n\n\tlet gameStyle={width: '100%', height: '100%', border: '0'}\n\t// noinspection HtmlUnknownTarget\n\treturn <div style={{display: 'flex', flexDirection: 'horizontal', width: '25%', height: '100%'}}>\n\t\t<div style={{border: 10, backgroundColor: 'rgba(255,255,255,.1)', flexGrow: 4, display: 'flex', flexDirection: 'column', overflowY: 'scroll', pointerEvents: 'auto'}}>\n\t\t\t<h1 style={{color: 'white'}}>Config</h1>\n\t\t\t<Button style={{pointerEvents: 'auto'}} variant=\"contained\" size=\"small\" color=\"primary\"> Undo </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Redo </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Add Item </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\"> Add Delta </Button>\n\t\t\t<LeafModifier schema={window.getDeltasGuiSchema()}></LeafModifier>\n\t\t\t<GetSimpleGui/>\n\t\t</div>\n\t</div>\n}\ndocument.addEventListener(\"DOMContentLoaded\", function(event)\n{\n\tReactDOM.render(<App/>, document.getElementById('root'))\n\t// Your code to run since DOM is loaded and ready\n})\n"]},"metadata":{},"sourceType":"module"}