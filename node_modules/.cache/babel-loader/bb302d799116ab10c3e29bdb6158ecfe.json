{"ast":null,"code":"import _slicedToArray from \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Select from 'react-select';\nimport Split from 'react-split';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nfunction Multiplexer({\n  schema\n}) {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOption = _useState2[0],\n        setSelectedOption = _useState2[1];\n\n  if (!schema) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  });\n  const options = Object.keys(schema).map(key => ({\n    value: key,\n    label: key\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Select, {\n    value: {\n      label: selectedOption\n    },\n    onChange: x => setSelectedOption(x.value),\n    options: options,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Schema, {\n    schema: schema[selectedOption],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n}\n\nfunction StringInput({\n  schema\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, schema);\n}\n\nfunction isLeaf(schema) {\n  if (typeof schema !== 'object') return 'type';\n\n  for (const _ref of Object.entries(schema)) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    const index = _ref2[0];\n    const value = _ref2[1];\n\n    if (typeof value === 'string') {\n      console.assert('type' in schema);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction addItemDialogs() {\n  function itemDialog() {\n    const value = prompt(\"Enter the new item name:\");\n    if (!value) return alert('Canceled adding item');else if (value in window.config.items) {\n      alert('Sorry, that names already taken! Try another one...');\n      return itemDialog();\n    }\n    return value;\n  }\n\n  function typeDialog() {\n    const value = prompt(\"Enter the new item type! Please choose from: \" + Object.keys(window.getItemSchemas()));\n    if (!value) return alert('Canceled adding item');else if (!(value in window.getItemSchemas())) {\n      alert('Sorry, thats not a module type! Please choose from: ' + Object.keys(window.getItemSchemas()));\n      return typeDialog();\n    }\n    return value;\n  }\n\n  const name = itemDialog();\n  if (!name) return;\n  const type = typeDialog();\n  if (!type) return;\n  alert(\"Success! Added item. Please refresh the page to see changes.\");\n  window.addLinesToConfigString('items\t' + name + ' ' + type);\n}\n\nfunction addDeltaDialog() {\n  function deltaDialog() {\n    const value = prompt(\"Enter the new delta name:\");\n    if (!value) return alert('Canceled adding delta');else if (value in window.config.deltas) {\n      alert('Sorry, that names already taken! Try another one...');\n      return deltaDialog();\n    }\n    return value;\n  }\n\n  const d = deltaDialog();\n  if (!d) return;\n  alert(\"Success! Added delta. Please refresh the page to see changes.\");\n  window.addLinesToConfigString('deltas\t' + d);\n}\n\nfunction Schema({\n  schema\n}) {\n  if (!schema) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  });\n\n  if (isLeaf(schema)) {\n    return React.createElement(LeafModifier, {\n      schema: schema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(Multiplexer, {\n      schema: schema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    });\n  }\n}\n\nfunction TextInput({\n  value,\n  setValue\n}) {\n  return React.createElement(Input, {\n    value: value,\n    onChange: event => {\n      setValue(event.target.value);\n    } // className={classes.input}\n    ,\n    inputProps: {\n      'aria-label': 'Description'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  });\n}\n\nfunction NumberInput({\n  value,\n  setValue,\n  step = .1\n}) {\n  return React.createElement(TextField, {\n    type: \"number\",\n    value: value,\n    inputProps: {\n      /*min: \"0\", max: \"10\",*/\n      step: step\n    },\n    onChange: event => {\n      setValue(event.target.value);\n    } // className={classes.input}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  });\n}\n\nfunction SelectInput({\n  value,\n  setValue,\n  values = []\n}) {\n  return React.createElement(Select, {\n    value: {\n      label: value\n    },\n    onChange: x => setValue(x.value),\n    options: values,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  });\n}\n\nfunction BooleanInput({\n  value,\n  setValue\n}) {\n  return React.createElement(Switch, {\n    checked: Boolean(value),\n    onChange: event => setValue(event.target.checked),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  });\n}\n\nfunction LeafModifier({\n  schema\n}) {\n  let onClick = function () {\n    const value = prompt(\"Enter the new value:\");\n    if (value == null) return; //Canceled\n    else {\n        schema.set(value);\n      }\n  };\n\n  const checked = schema.config !== undefined; // alert(\"ASOIJD\")\n\n  let input = React.createElement(TextInput, {\n    value: schema.config,\n    setValue: schema.set,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  });\n\n  if (schema.type === 'string') {\n    input = input; //Default: text input\n  } else if (schema.type === 'boolean') {\n    input = React.createElement(BooleanInput, {\n      value: schema.config,\n      setValue: schema.set,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    });\n  } else if (schema.type === 'number') {\n    input = React.createElement(NumberInput, {\n      value: schema.config,\n      setValue: schema.set,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    });\n  } else if (schema.type = 'select') {\n    input = React.createElement(SelectInput, {\n      value: schema.config,\n      values: schema.values,\n      setValue: schema.set,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    });\n  }\n\n  console.assert(input !== undefined);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    checked: checked,\n    disabled: schema.path[0] === 'initial',\n    onChange: event => {\n      const checked = event.target.checked;\n      if (checked)\n        /*alert(schema.state+'  '+schema.config)*/\n        ;\n      schema.set(checked ? schema.default : null);\n    } //if(!checked){schema.set(undefined)}else{console.assert(checked);setUsed(checked)}}}\n    ,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }), checked ? input : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: onClick,\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, 'State: ' + schema.state + '\\tConfig: ' + schema.config\n  /*schema.path+''*/\n  ));\n}\n\nlet oldStuff = undefined;\nsetInterval(window.tryRefreshInstance, 100);\n\nfunction tryRefreshInstance() {\n  if (window.refreshInstance) window.refreshInstance();\n}\n\nwindow.refreshInstance = undefined;\n\nfunction GetSimpleGui() {\n  const labels = [];\n\n  let _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      instance = _useState4[0],\n      setInstance = _useState4[1];\n\n  window.refreshInstance = () => setInstance(window.getGuiArchitectureInstance());\n\n  timerEvents[0] = () => {\n    let stuff = window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config]);\n\n    if (stuff !== oldStuff) {\n      setInstance(stuff);\n      oldStuff = stuff;\n    }\n  }; //This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\n  for (const _ref3 of Object.entries(instance)) {\n    var _ref4 = _slicedToArray(_ref3, 2);\n\n    const index = _ref4[0];\n    const i = _ref4[1];\n\n    if (i.path.includes('color')) {\n      let onClick = function () {\n        const value = prompt(\"Enter the new value for \" + i.path.join(' ') + '\\n\\n at delta ' + i.delta + '\\n\\nCurrent Value: ' + i.valueInConfig);\n        if (value == null) return; //Canceled\n        else {\n            let configString = localStorage.getItem('config');\n            configString += '\\n' + 'deltas\t' + i.delta + '\t' + i.path.join('\t') + ' ' + value;\n            window.gameWindow.setConfigDjsonInLocalStorage(configString);\n          }\n      };\n\n      let color = i.valueInConfig === undefined ? \"primary\" : \"secondary\";\n      labels.push(React.createElement(Button, {\n        key: index,\n        variant: \"contained\",\n        onClick: onClick,\n        size: \"small\",\n        color: color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, 'deltas ' + i.delta + ' ' + i.path.join(' ')));\n    }\n  }\n\n  return React.createElement(\"table\", {\n    style: {\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, labels);\n}\n\nwindow.gameWindow = undefined; //Will be set to the 'window' element of the 'game.html' iframe\n\nconst timerEvents = [() => {}]; //Calls each one of these on a timer\n\nfunction doTimerEvents() {\n  if (window.gameWindow !== undefined) //We're not ready yet: the game iframe has to finish loading first\n    {\n      console.log(\"HO\");\n      window.gameWindow.editorMode = true;\n\n      for (const event of timerEvents) event();\n    }\n}\n\nsetInterval(doTimerEvents, 100);\n\nfunction App() {\n  function setGameWindow(x) {\n    window.gameWindow = x.contentWindow;\n  }\n\n  const _useState5 = useState(window.getDeltasGuiSchema()),\n        _useState6 = _slicedToArray(_useState5, 2),\n        schema = _useState6[0],\n        setSchema = _useState6[1];\n\n  window.refreshGuiSchema = () => setSchema(window.getDeltasGuiSchema());\n\n  let gameStyle = {\n    width: '100%',\n    height: '100%',\n    border: '0' // noinspection HtmlUnknownTarget\n\n  };\n  return React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'horizontal',\n      width: '25%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      border: 10,\n      backgroundColor: 'rgba(255,255,255,.3)',\n      flexGrow: 4,\n      display: 'flex',\n      flexDirection: 'column',\n      overflowY: 'scroll',\n      pointerEvents: 'auto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      color: 'white'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"Config\"), React.createElement(Button, {\n    style: {\n      pointerEvents: 'auto'\n    },\n    onClick: window.undoEditorChange,\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \" Undo \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    onClick: addItemDialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \" Add Item \"), React.createElement(Button, {\n    variant: \"contained\",\n    size: \"small\",\n    color: \"primary\",\n    onClick: addDeltaDialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, \" Add Delta \"), React.createElement(Schema, {\n    schema: schema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }), React.createElement(GetSimpleGui, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298\n    },\n    __self: this\n  })));\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function (event) {\n  ReactDOM.render(React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }), document.getElementById('root')); // Your code to run since DOM is loaded and ready\n});","map":{"version":3,"sources":["/Users/Ryan/Desktop/CleanCode/SBU/LabInACube/Lab-In-A-Cube/src/index.js"],"names":["AddIcon","Button","DeleteIcon","Fab","IconButton","Input","NavigationIcon","PropTypes","React","ReactDOM","Select","Split","Switch","TextField","useState","withStyles","Multiplexer","schema","selectedOption","setSelectedOption","options","Object","keys","map","key","value","label","x","StringInput","isLeaf","entries","index","console","assert","addItemDialogs","itemDialog","prompt","alert","window","config","items","typeDialog","getItemSchemas","name","type","addLinesToConfigString","addDeltaDialog","deltaDialog","deltas","d","Schema","TextInput","setValue","event","target","NumberInput","step","SelectInput","values","BooleanInput","Boolean","checked","LeafModifier","onClick","set","undefined","input","path","default","state","oldStuff","setInterval","tryRefreshInstance","refreshInstance","GetSimpleGui","labels","instance","setInstance","getGuiArchitectureInstance","timerEvents","stuff","gameWindow","apply","i","includes","join","delta","valueInConfig","configString","localStorage","getItem","setConfigDjsonInLocalStorage","color","push","flexGrow","display","flexDirection","doTimerEvents","log","editorMode","App","setGameWindow","contentWindow","getDeltasGuiSchema","setSchema","refreshGuiSchema","gameStyle","width","height","border","backgroundColor","overflowY","pointerEvents","undoEditorChange","document","addEventListener","render","getElementById"],"mappings":"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","sourcesContent":["import AddIcon from '@material-ui/icons/Add'\nimport Button from '@material-ui/core/Button'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Fab from '@material-ui/core/Fab'\nimport IconButton from '@material-ui/core/IconButton'\nimport Input from '@material-ui/core/Input'\nimport NavigationIcon from '@material-ui/icons/Navigation'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport Select from 'react-select'\nimport Split from 'react-split'\nimport Switch from '@material-ui/core/Switch'\nimport TextField from '@material-ui/core/TextField'\nimport {useState} from 'react'\nimport {withStyles} from '@material-ui/core/styles'\n\n\nfunction Multiplexer({schema})\n{\n\tconst [selectedOption, setSelectedOption]=useState(null)\n\tif(!schema)\n\t\treturn <div></div>\n\tconst options                            =Object.keys(schema).map(key=>({value: key, label: key}))\n\n\treturn <div>\n\t\t<Select value={{label: selectedOption}}\n\t\t\t\tonChange={x=>setSelectedOption(x.value)}\n\t\t\t\toptions={options}\n\t\t/>\n\t\t<Schema schema={schema[selectedOption]}/>\n\t</div>\n}\n\nfunction StringInput({schema})\n{\n\treturn <div>{schema}</div>\n}\n\nfunction isLeaf(schema)\n{\n\tif(typeof schema!=='object')\n\t\treturn 'type'\n\tfor(const [index,value] of Object.entries(schema))\n\t{\n\t\tif(typeof value==='string')\n\t\t{\n\t\t\tconsole.assert('type' in schema)\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\nfunction addItemDialogs()\n{\n\tfunction itemDialog()\n\t{\n\t\tconst value=prompt(\"Enter the new item name:\")\n\t\tif(!value)\n\t\t\treturn alert('Canceled adding item')\n\t\telse if(value in window.config.items)\n\t\t{\n\t\t\talert('Sorry, that names already taken! Try another one...')\n\t\t\treturn itemDialog()\n\t\t}\n\t\treturn value\n\t}\n\tfunction typeDialog()\n\t{\n\t\tconst value=prompt(\"Enter the new item type! Please choose from: \"+Object.keys(window.getItemSchemas()))\n\t\tif(!value)\n\t\t\treturn alert('Canceled adding item')\n\t\telse if(!(value in (window.getItemSchemas())))\n\t\t{\n\t\t\talert('Sorry, thats not a module type! Please choose from: '+Object.keys((window.getItemSchemas())))\n\t\t\treturn typeDialog()\n\t\t}\n\t\treturn value\n\t}\n\tconst name=itemDialog()\n\tif(!name)\n\t\treturn\n\tconst type=typeDialog()\n\tif(!type)\n\t\treturn\n\talert(\"Success! Added item. Please refresh the page to see changes.\")\n\t\twindow.addLinesToConfigString('items\t'+name+' '+type)\n}\n\nfunction addDeltaDialog()\n{\n\tfunction deltaDialog()\n\t{\n\t\tconst value=prompt(\"Enter the new delta name:\")\n\t\tif(!value)\n\t\t\treturn alert('Canceled adding delta')\n\t\telse if(value in window.config.deltas)\n\t\t{\n\t\t\talert('Sorry, that names already taken! Try another one...')\n\t\t\treturn deltaDialog()\n\t\t}\n\t\treturn value\n\t}\n\tconst d=deltaDialog()\n\tif(!d)return\n\talert(\"Success! Added delta. Please refresh the page to see changes.\")\n\twindow.addLinesToConfigString('deltas\t'+d)\n}\n\nfunction Schema({schema})\n{\n\tif(!schema)\n\t\treturn <div></div>\n\tif(isLeaf(schema))\n\t{\n\t\treturn <LeafModifier schema={schema}/>\n\t}\n\telse\n\t{\n\t\treturn <Multiplexer schema={schema}/>\n\t}\n}\n\nfunction TextInput({value,setValue})\n{\n\treturn <Input\n        value={value}\n        onChange={event=>{setValue(event.target.value)}}\n        // className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}/>\n}\nfunction NumberInput({value,setValue,step=.1})\n{\n\treturn <TextField\n\ttype=\"number\"\n        value={value}\n\n     inputProps={{ /*min: \"0\", max: \"10\",*/ step: step }}\n        onChange={event=>{setValue(event.target.value)}}\n        // className={classes.input}\n        />\n}\n\nfunction SelectInput({value,setValue,values=[]})\n{\n\treturn <Select value={{label: value}}\n\t\t\t\t   onChange={x=>setValue(x.value)}\n\t\t\t\t   options={values}\n\t/>\n}\n\nfunction BooleanInput({value,setValue})\n{\n\treturn <Switch\n\t\tchecked={Boolean(value)}\n\t\tonChange={event=>setValue(event.target.checked)}\n\t\tcolor=\"primary\"\n\t\t/>\n}\n\nfunction LeafModifier({schema})\n{\n\tlet onClick=function()\n\t{\n\t\tconst value=prompt(\"Enter the new value:\")\n\t\tif(value==null)\n\t\t\treturn//Canceled\n\t\telse\n\t\t{\n\t\t\tschema.set(value)\n\t\t}\n\t}\n\n\tconst checked=schema.config!==undefined\n\t// alert(\"ASOIJD\")\n\tlet input=<TextInput value={schema.config} setValue={schema.set}/>\n\tif(schema.type==='string')\n\t{\n\t\tinput=input//Default: text input\n\t}\n\telse if(schema.type==='boolean')\n\t{\n\t\tinput=<BooleanInput value={schema.config} setValue={schema.set}/>\n\t}\n\telse if(schema.type==='number')\n\t{\n\t\tinput=<NumberInput value={schema.config} setValue={schema.set}/>\n\t}\n\telse if(schema.type='select')\n\t{\n\t\tinput=<SelectInput value={schema.config} values={schema.values} setValue={schema.set}/>\n\t}\n\tconsole.assert(input!==undefined)\n\treturn <div>\n\t<Switch\n\t\tchecked={checked}\n\t\tdisabled={schema.path[0]==='initial'}\n\t\tonChange={event=>{const checked=event.target.checked;if(checked)/*alert(schema.state+'  '+schema.config)*/;schema.set(checked?schema.default:null)}}//if(!checked){schema.set(undefined)}else{console.assert(checked);setUsed(checked)}}}\n\t\tcolor=\"primary\"\n\t\t/>\n\t{checked?input : <div></div>}\n\t<Button\n\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\tsize=\"small\"\n\t\t\t\t   >{'State: '+schema.state+'\\tConfig: '+schema.config/*schema.path+''*/}</Button>\n\t\t\t\t   </div>\n}\n\nlet oldStuff=undefined\nsetInterval(window.tryRefreshInstance,100)\nfunction tryRefreshInstance()\n{\n\tif(window.refreshInstance)\n\t\twindow.refreshInstance()\n}\nwindow.refreshInstance=undefined\nfunction GetSimpleGui()\n{\n\tconst labels               =[]\n\tlet [instance, setInstance]=useState({})\n\twindow.refreshInstance=()=>setInstance(window.getGuiArchitectureInstance())\n\ttimerEvents[0]             =()=>\n\t{\n\t\tlet stuff=window.gameWindow.getGuiArchitectureInstance.apply(window.gameWindow, [window.gameWindow.config])\n\t\tif(stuff!==oldStuff)\n\t\t{\n\t\t\tsetInstance(stuff)\n\t\t\toldStuff=stuff\n\t\t}\n\t}//This function is inefficient. It must be cleaned up asap. (it lists all possible controls...which is just STUPID (but also very easy to make))\n\n\tfor(const [index, i] of Object.entries(instance))\n\t{\n\t\tif(i.path.includes('color'))\n\t\t{\n\t\t\tlet onClick=function()\n\t\t\t{\n\t\t\t\tconst value=prompt(\"Enter the new value for \"+(i.path.join(' '))+\n\t\t\t\t\t\t\t\t\t   '\\n\\n at delta '+(i.delta)+'\\n\\nCurrent Value: '+i.valueInConfig)\n\t\t\t\tif(value==null)\n\t\t\t\t\treturn//Canceled\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tlet configString=localStorage.getItem('config')\n\t\t\t\t\tconfigString+='\\n'+'deltas\t'+i.delta+'\t'+i.path.join('\t')+' '+value\n\t\t\t\t\twindow.gameWindow.setConfigDjsonInLocalStorage(configString)\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet color  =i.valueInConfig===undefined ? \"primary\" : \"secondary\"\n\t\t\tlabels.push(<Button key={index}\n\t\t\t\t\t\t\t\tvariant=\"contained\" onClick={onClick}\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\tcolor={color}>\n\t\t\t\t{'deltas '+i.delta+' '+i.path.join(' ')}\n\t\t\t</Button>)\n\t\t}\n\t}\n\treturn <table style={{flexGrow: 4, display: 'flex', flexDirection: 'column'}}>\n\t\t{labels}\n\t</table>\n}\n\nwindow.gameWindow=undefined//Will be set to the 'window' element of the 'game.html' iframe\nconst timerEvents=[()=>{}]//Calls each one of these on a timer\nfunction doTimerEvents()\n{\n\tif(window.gameWindow!==undefined)//We're not ready yet: the game iframe has to finish loading first\n\t{\n\t\tconsole.log(\"HO\")\n\t\twindow.gameWindow.editorMode=true\n\t\tfor(const event of timerEvents)\n\t\t\tevent()\n\t}\n}\nsetInterval(doTimerEvents, 100)\n\nfunction App()\n{\n\tfunction setGameWindow(x)\n\t{\n\t\twindow.gameWindow=x.contentWindow\n\t}\n\tconst [schema,setSchema]=useState(window.getDeltasGuiSchema())\n\twindow.refreshGuiSchema=()=>setSchema(window.getDeltasGuiSchema())\n\tlet gameStyle={width: '100%', height: '100%', border: '0'}\n\t// noinspection HtmlUnknownTarget\n\treturn <div style={{display: 'flex', flexDirection: 'horizontal', width: '25%', height: '100%'}}>\n\t\t<div style={{border: 10, backgroundColor: 'rgba(255,255,255,.3)', flexGrow: 4, display: 'flex', flexDirection: 'column', overflowY: 'scroll', pointerEvents: 'auto'}}>\n\t\t\t<h1 style={{color: 'white'}}>Config</h1>\n\t\t\t<Button style={{pointerEvents: 'auto'}} onClick={window.undoEditorChange}variant=\"contained\" size=\"small\" color=\"primary\"> Undo </Button>\n\t\t\t{/*<Button variant=\"contained\" size=\"small\" color=\"primary\"> Redo </Button>*/}\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={addItemDialogs}> Add Item </Button>\n\t\t\t<Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={addDeltaDialog}> Add Delta </Button>\n\t\t\t<Schema schema={schema}></Schema>\n\t\t\t<GetSimpleGui/>\n\t\t</div>\n\t</div>\n}\ndocument.addEventListener(\"DOMContentLoaded\", function(event)\n{\n\tReactDOM.render(<App/>, document.getElementById('root'))\n\t// Your code to run since DOM is loaded and ready\n})\n"]},"metadata":{},"sourceType":"module"}